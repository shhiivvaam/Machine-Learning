# -*- coding: utf-8 -*-
"""K Means.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18NPszJwHB32LbDxCge7ldBHKonl0Pd9U
"""

from sklearn.cluster import KMeans
import pandas as pd
df=pd.read_csv('income.csv')   
df

import matplotlib.pyplot as plt
plt.scatter(df['age'],df['income'])
plt.xlabel('age')
plt.ylabel('income')
plt.show()

model=KMeans(n_clusters=3)
y_pred=model.fit_predict(df[['age','income']])
print(y_pred)

df['cluster']=y_pred
df

print(model.cluster_centers_)

df1=df[df['cluster']==0]
df2=df[df['cluster']==1]
df3=df[df['cluster']==2]

plt.scatter(df1['age'],df1['income'],color='red')
plt.scatter(df2['age'],df2['income'],color='green')
plt.scatter(df3['age'],df3['income'],color='blue')
plt.xlabel('age')
plt.ylabel('income')
plt.legend()
plt.show()

from sklearn.preprocessing import MinMaxScaler
dfnew=df
scaler=MinMaxScaler()
scaler.fit(dfnew[['income']])
dfnew['income']=scaler.transform(dfnew[['income']])

scaler.fit(dfnew[['age']])
dfnew['age']=scaler.transform(dfnew[['age']])
dfnew



model1=KMeans(n_clusters=3)
y_pred1=model1.fit_predict(dfnew[['age','income']])
print(y_pred1)

dfnew['cluster']=y_pred1
print(model1.cluster_centers_)

df11=dfnew[dfnew['cluster']==0]
df22=dfnew[dfnew['cluster']==1]
df33=dfnew[dfnew['cluster']==2]

plt.scatter(df11['age'],df11['income'],color='red')
plt.scatter(df22['age'],df22['income'],color='green')
plt.scatter(df33['age'],df33['income'],color='blue')
plt.scatter(model1.cluster_centers_[:,0],model1.cluster_centers_[:,1],marker='*',color='magenta')
plt.xlabel('age')
plt.ylabel('income')
plt.legend()
plt.show()

"""# ELBOW **METHOD**"""

sse=[]
for i in range(1,11):
  model2=KMeans(n_clusters=i)
  model2.fit(df[['age','income']])
  sse.append(model2.inertia_)

sse

plt.xlabel('K')
plt.ylabel('Sum of squared error')
plt.plot(range(1,11),sse)
plt.show()